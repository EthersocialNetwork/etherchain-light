extends layout

block content
  script(defer=jsload_defer async=jsload_async type='text/javascript', src="https://cdnjs.cloudflare.com/ajax/libs/highcharts/6.2.0/highcharts.js")
  script(defer=jsload_defer async=jsload_async type='text/javascript', src="https://cdnjs.cloudflare.com/ajax/libs/highcharts/6.2.0/modules/exporting.js")
  script(defer=jsload_defer async=jsload_async type='text/javascript', src="https://cdnjs.cloudflare.com/ajax/libs/highcharts/6.2.0/modules/export-data.js")
  script(defer=jsload_defer async=jsload_async type='text/javascript', src="https://cdnjs.cloudflare.com/ajax/libs/highcharts/6.2.0/modules/heatmap.js")
  script(defer=jsload_defer async=jsload_async type='text/javascript', src="https://cdnjs.cloudflare.com/ajax/libs/highcharts/6.2.0/modules/treemap.js")
  script(defer=jsload_defer async=jsload_async type='text/javascript', src="https://cdnjs.cloudflare.com/ajax/libs/highcharts/6.2.0/modules/series-label.js")
  if bimax.nowPrice
    h3 Exchange Summary (BIMAX / CacheTime: 1 min. / #{moment.unix(bimax.time).format()})
    table.table
        td(style="padding-right:20px") 
          center
            span(style="font-size:2em; color:#008cba")
              i.fa.fa-krw
            span(style="font-size:2em; color:#000000") &nbsp;&nbsp;#{numberformatter(bimax.nowPrice)}
            span(style="font-size:1.5em; color:#008cba")
              br/
              strong ESN to KRW
        td(style="padding-right:20px") 
          center
            span(style="font-size:2em; color:#008cba")
              i.fa.fa-arrow-down
            span(style="font-size:2em; color:#000000") &nbsp;&nbsp;#{numberformatter(bimax.low)} KRW
            span(style="font-size:1.5em; color:#008cba")
              br/
              strong Lowest Price
        td(style="padding-right:20px") 
          center
            span(style="font-size:2em; color:#008cba")
              i.fa.fa-arrow-up
            span(style="font-size:2em; color:#000000") &nbsp;&nbsp;#{numberformatter(bimax.high)} KRW
            span(style="font-size:1.5em; color:#008cba")
              br/
              strong Highest Price
        td(style="padding-right:20px") 
          center
            span(style="font-size:2em; color:#008cba")
              i.fa.fa-globe
            span(style="font-size:2em; color:#000000") &nbsp;&nbsp;#{numberformatter(bimax.tradeAmount)} ESN
            span(style="font-size:1.5em; color:#008cba")
              br/
              strong Volume(24h)
  if coinrate.krw
    h3 Exchange Summary (Bit-z / CacheTime: 1 min. / #{moment.unix(ticker.time).format()})
    table.table
      tr
        td(style="padding-right:20px") 
          center
            span(style="font-size:2em; color:#008cba")
              i.fa.fa-krw
            span(style="font-size:2em; color:#000000") &nbsp;&nbsp;#{coinrate.krw}
            span(style="font-size:1.5em; color:#008cba")
              br/
              strong ESN to KRW
        td(style="padding-right:20px") 
          center
            span(style="font-size:2em; color:#008cba")
              i.fa.fa-btc
            span(style="font-size:2em; color:#000000") &nbsp;&nbsp;#{coinrate.btc}
            span(style="font-size:1.5em; color:#008cba")
              br/
              strong ESN to BTC
        td(style="padding-right:20px") 
          center
            span(style="font-size:2em; color:#008cba")
              i.fa.fa-usd
            span(style="font-size:2em; color:#000000") &nbsp;&nbsp;#{coinrate.usd}
            span(style="font-size:1.5em; color:#008cba")
              br/
              strong ESN to USD
        td(style="padding-right:20px") 
          center
            span(style="font-size:2em; color:#008cba")
              i.fa.fa-globe
            span(style="font-size:2em; color:#000000") &nbsp;&nbsp;#{ticker.quoteVolume} BTC
            span(style="font-size:1.5em; color:#008cba")
              br/
              strong Volume(24h)
      tr
        td(style="padding-right:20px") 
          center
            span(style="font-size:2em; color:#008cba")
              i.fa.fa-arrow-down
            span(style="font-size:2em; color:#000000") &nbsp;&nbsp;#{ticker.low} BTC
            span(style="font-size:1.5em; color:#008cba")
              br/
              strong Lowest Price
        td(style="padding-right:20px") 
          center
            span(style="font-size:2em; color:#008cba")
              i.fa.fa-arrow-up
            span(style="font-size:2em; color:#000000") &nbsp;&nbsp;#{ticker.high} BTC
            span(style="font-size:1.5em; color:#008cba")
              br/
              strong Highest Price
        td(style="padding-right:20px") 
          center
            span(style="font-size:2em; color:#008cba")
              i.fa.fa-th
            span(style="font-size:2em; color:#000000") &nbsp;&nbsp;#{ticker.priceChange}%
            span(style="font-size:1.5em; color:#008cba")
              br/
              strong PriceChange(Recently)
        td(style="padding-right:20px") 
          center
            span(style="font-size:2em; color:#008cba")
              i.fa.fa-th-large
            span(style="font-size:2em; color:#000000") &nbsp;&nbsp;#{ticker.priceChange24h}%
            span(style="font-size:1.5em; color:#008cba")
              br/
              strong PriceChange(24h)
  h3 Block Chain Summary(Calculated in the last #{blockCount} blocks)
  table.table
    tr
      td(style="padding-right:20px") 
        center
          span(style="font-size:2em; color:#008cba")
            i.fa.fa-th
          span(style="font-size:2em; color:#000000") &nbsp;&nbsp;#{lastblock}
          span(style="font-size:1.5em; color:#008cba")
            br/
            strong BLOCK HEIGHT
      td(style="padding-right:20px") 
        center
          span(style="font-size:2em; color:#008cba")
            i.fa.fa-hourglass-end
          span(style="font-size:2em; color:#000000") &nbsp;&nbsp;#{blocktime}
          span(style="font-size:1.5em; color:#008cba")
            br/
            strong BLOCK TIME
      td(style="padding-right:20px") 
        center
          span(style="font-size:2em; color:#008cba")
            i.fa.fa-tachometer
          span(style="font-size:2em; color:#000000") &nbsp;&nbsp;#{hashrate}
          span(style="font-size:1.5em; color:#008cba")
            br/
            strong NETWORK HASHRATE
      td(style="padding-right:20px") 
        center
          span(style="font-size:2em; color:#008cba")
            i.fa.fa-braille
          span(style="font-size:2em; color:#000000") &nbsp;&nbsp;#{difficulty}
          span(style="font-size:1.5em; color:#008cba")
            br/
            strong DIFFICULTY
  div#chart_BlockTime(style="min-width: 480px; max-width: 1200px; height: 400px; margin: 0 auto")
  div#chart_Miners(style="min-width: 480px; max-width: 1200px; height: 400px; margin: 0 auto")
  table
    tr
      td
        h3 Recent blocks
      td &nbsp;&nbsp;&nbsp;
      td
        a(href="/blocks") more | 더보기
  table.table
    thead
      tr
        th Number
        th Miner
        th Timestamp
        th # Tx
        th # Uncles
        th is in DB
    tbody
      for block in blocks
        tr
          td
            a(href="/block/" + block.number) #{block.number}
          td 
            a(href="/account/" + block.author) #{nameformatter.format(block.author)}
          td #{moment.unix(block.timestamp).format()}
          td #{block.transactionsCount}
          td #{block.unclesCount}
          td #{block.isDB}
  table
    tr
      td
        h3 Recent Transactions
      td &nbsp;&nbsp;&nbsp;
      td
        a(href="/tx_recent") more | 더보기
  if txs.length === 0
    p No transactions during the last 10 blocks
  else
    table.table
      thead
        tr
          th Hash
          th From
          th To
          th Amount
      tbody
        for tx in txs
          tr
            td
              a(href="/tx/" + tx.hash) #{tx.hash.substr(0,10)}...
            td
              a(href="/account/" + tx.from) #{nameformatter.format(tx.from)}
            td
              if tx.to
                a(href="/account/" + tx.to) #{nameformatter.format(tx.to)}
              else
                | New Contract
            td(style="text-align: right;") #{ethformatter(tx.value)}
  script.
    (function() {
      function async_load(){
        const opt_chart = {
          zoomType: 'x',
          scrollablePlotArea: {
            minWidth: 360
          }
        };
        Highcharts.chart('chart_BlockTime', {
          chart: opt_chart,
          title: {
            text: 'Last '+#{chartDataNumbers}+' block chart 최근 '+#{chartDataNumbers}+' 블럭 차트'
          },
          exporting: {
            enabled: true
          },
          credits: {
            enabled: true
          },
          xAxis: [{
            categories: !{chartBlockNumber},
            crosshair: true,
            labels: {
              formatter: function() {
                return this.value.toLocaleString();
              }
            },
            title: {
              text: null
            }
          }],
          yAxis: [{
            min: !{chartBlockTimeMin},
            title: {
              text: 'BlockTime',
              style: {
                color: Highcharts.getOptions().colors[0]
              }
            },
            labels: {
              formatter: function() {
                return this.value.toLocaleString() + 's';
              },
              style: {
                color: Highcharts.getOptions().colors[0]
              }
            },
            opposite: true
          }, { // Secondary yAxis
            gridLineWidth: 0,
            min: !{chartDifficultyMin},
            title: {
              text: 'Difficulty',
              style: {
                color: Highcharts.getOptions().colors[1]
              }
            },
            labels: {
              formatter: function() {
                return this.value.toLocaleString(undefined, {maximumFractionDigits:4}) + 'TH';
              },
              style: {
                color: Highcharts.getOptions().colors[1]
              }
            }
          }, { // Tertiary yAxis
            gridLineWidth: 0,
            min: !{chartNetHashrateMin},
            max: !{chartNetHashrateMax},
            title: {
              text: 'NetworkHashrate',
              style: {
                color: Highcharts.getOptions().colors[6]
              }
            },
            labels: {
              formatter: function() {
                return this.value.toLocaleString(undefined, {maximumFractionDigits:4}) + 'TH/s';
              },
              style: {
                color: Highcharts.getOptions().colors[6]
              }
            },
            opposite: true
          }],
          tooltip: {
            formatter: function() {
              return '<b>BlockNumber</b>: ' + this.points[0].x.toLocaleString() + '<br/><b>' + this.points[0].series.name + '</b>: ' + this.points[0].y.toLocaleString() + ' s<br/><b>' + this.points[1].series.name + '</b>: ' + this.points[1].y.toLocaleString(undefined, {maximumFractionDigits:4}) + 'TH<br/><b>' + this.points[2].series.name + '</b>: ' + this.points[2].y.toLocaleString(undefined, {maximumFractionDigits:4}) + 'TH/s<br/>';
            },
            shared: true
          },
          series: [{
            animation: false,
            name: 'BlockTime',
            yAxis: 0,
            type: 'spline',
            data: !{chartBlockTime},
            marker: {
              enabled: true
            },
            tooltip: {
              valueSuffix: ' s'
            },
            dataLabels: {
              enabled: true,
              style: {
                fontSize: '8px'
              }
            },
          },{
            animation: false,
            name: 'Difficulty',
            type: 'spline',
            yAxis: 1,
            data: !{chartDifficulty},
            marker: {
              enabled: true
            },
            tooltip: {
              valueSuffix: ' TH'
            }
          },{
            animation: false,
            name: 'NetworkHashrate',
            type: 'spline',
            dashStyle: 'shortdot',
            yAxis: 2,
            color: Highcharts.getOptions().colors[6],
            lineColor: Highcharts.getOptions().colors[6],
            marker: {
              enabled: false
            },
            data: !{chartNetHashrate},
            tooltip: {
              valueSuffix: ' TH/s'
            }
          }]
        }, function (chart) {
          chart.tooltip.refresh([chart.series[0].points[0], chart.series[1].points[0], chart.series[2]. points[0]]);
        });

        Highcharts.chart('chart_Miners', {
          colorAxis: {
            minColor: '#008cba',
            maxColor: '#FFFFFF'
          },
          series: [{
            animation: false,
            type: 'treemap',
            layoutAlgorithm: 'squarified',
            data: !{chartMiners}
          }],
          title: {
            text: 'Recent '+#{blockCount}+' block mining distribution 최근 '+#{blockCount}+'블록의 채굴자 분포'
          },
          exporting: {
            enabled: true
          },
          credits: {
            enabled: true
          },
          tooltip: {
            formatter: function() {
              return '<b>Miner</b>: ' + this.point.name + '<br/><b>Address</b>: ' + this.point.address + '<br/><b>Found</b>: ' + this.point.value + ' blocks<br/><b>Percent</b>: ' + ((this.point.value/(#{blockCount-1}))*100).toLocaleString(undefined, {maximumFractionDigits:2}) + ' %' + '<br/><b>HashRate</b>: ' + this.point.hashrate;
            }
          }
        }, function (chart) {
          chart.tooltip.refresh(chart.series[0].points[0]); // Show tooltip of the first point on load
        });
      }
      window.attachEvent ? window.attachEvent('onload', async_load) : window.addEventListener('load', async_load, false);
    })();